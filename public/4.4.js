(self.webpackJsonp=self.webpackJsonp||[]).push([[4],{522:function(e,t,n){"use strict";n.r(t),n.d(t,"conf",function(){return i}),n.d(t,"language",function(){return s});var a="undefined"==typeof monaco?self.monaco:monaco,r=["area","base","br","col","embed","hr","img","input","keygen","link","menuitem","meta","param","source","track","wbr"],i={wordPattern:/(-?\d*\.\d\w*)|([^\`\~\!\@\$\^\&\*\(\)\=\+\[\{\]\}\\\|\;\:\'\"\,\.\<\>\/\s]+)/g,comments:{blockComment:["{!--","--}"]},brackets:[["\x3c!--","--\x3e"],["<",">"],["{","}"],["(",")"]],autoClosingPairs:[{open:"{",close:"}"},{open:"[",close:"]"},{open:"(",close:")"},{open:'"',close:'"'},{open:"'",close:"'"}],surroundingPairs:[{open:"{",close:"}"},{open:"<",close:">"},{open:'"',close:'"'},{open:"'",close:"'"}],onEnterRules:[{beforeText:new RegExp("<(?!(?:"+r.join("|")+"))(\\w[\\w\\d]*)([^/>]*(?!/)>)[^<]*$","i"),afterText:/^<\/(\w[\w\d]*)\s*>$/i,action:{indentAction:a.languages.IndentAction.IndentOutdent}},{beforeText:new RegExp("<(?!(?:"+r.join("|")+"))(\\w[\\w\\d]*)([^/>]*(?!/)>)[^<]*$","i"),action:{indentAction:a.languages.IndentAction.Indent}}]},s={defaultToken:"",tokenPostfix:".svelte",tokenizer:{root:[[/\{/,{token:"@rematch",switchTo:"@svelteInSimpleState.root"}],[/<!DOCTYPE/,"metatag.html","@doctype"],[/<!--/,"comment.html","@comment"],[/(<)(\w+)(\/>)/,["delimiter.html","tag.html","delimiter.html"]],[/(<)(script)/,["delimiter.html",{token:"tag.html",next:"@script"}]],[/(<)(style)/,["delimiter.html",{token:"tag.html",next:"@style"}]],[/(<)([:\w]+)/,["delimiter.html",{token:"tag.html",next:"@otherTag"}]],[/(<\/)(\w+)/,["delimiter.html",{token:"tag.html",next:"@otherTag"}]],[/</,"delimiter.html"],[/\{/,"delimiter.html"],[/[^<{]+/]],doctype:[[/\{/,{token:"@rematch",switchTo:"@svelteInSimpleState.comment"}],[/[^>]+/,"metatag.content.html"],[/>/,"metatag.html","@pop"]],comment:[[/\{/,{token:"@rematch",switchTo:"@svelteInSimpleState.comment"}],[/-->/,"comment.html","@pop"],[/[^-]+/,"comment.content.html"],[/./,"comment.content.html"]],otherTag:[[/\{/,{token:"@rematch",switchTo:"@svelteInSimpleState.otherTag"}],[/\/?>/,"delimiter.html","@pop"],[/"([^"]*)"/,"attribute.value"],[/'([^']*)'/,"attribute.value"],[/[\w\-]+/,"attribute.name"],[/=/,"delimiter"],[/[ \t\r\n]+/]],script:[[/\{/,{token:"@rematch",switchTo:"@svelteInSimpleState.script"}],[/type/,"attribute.name","@scriptAfterType"],[/"([^"]*)"/,"attribute.value"],[/'([^']*)'/,"attribute.value"],[/[\w\-]+/,"attribute.name"],[/=/,"delimiter"],[/>/,{token:"delimiter.html",next:"@scriptEmbedded.text/javascript",nextEmbedded:"text/javascript"}],[/[ \t\r\n]+/],[/(<\/)(script\s*)(>)/,["delimiter.html","tag.html",{token:"delimiter.html",next:"@pop"}]]],scriptAfterType:[[/\{/,{token:"@rematch",switchTo:"@svelteInSimpleState.scriptAfterType"}],[/=/,"delimiter","@scriptAfterTypeEquals"],[/>/,{token:"delimiter.html",next:"@scriptEmbedded.text/javascript",nextEmbedded:"text/javascript"}],[/[ \t\r\n]+/],[/<\/script\s*>/,{token:"@rematch",next:"@pop"}]],scriptAfterTypeEquals:[[/\{/,{token:"@rematch",switchTo:"@svelteInSimpleState.scriptAfterTypeEquals"}],[/"([^"]*)"/,{token:"attribute.value",switchTo:"@scriptWithCustomType.$1"}],[/'([^']*)'/,{token:"attribute.value",switchTo:"@scriptWithCustomType.$1"}],[/>/,{token:"delimiter.html",next:"@scriptEmbedded.text/javascript",nextEmbedded:"text/javascript"}],[/[ \t\r\n]+/],[/<\/script\s*>/,{token:"@rematch",next:"@pop"}]],scriptWithCustomType:[[/\{/,{token:"@rematch",switchTo:"@svelteInSimpleState.scriptWithCustomType.$S2"}],[/>/,{token:"delimiter.html",next:"@scriptEmbedded.$S2",nextEmbedded:"$S2"}],[/"([^"]*)"/,"attribute.value"],[/'([^']*)'/,"attribute.value"],[/[\w\-]+/,"attribute.name"],[/=/,"delimiter"],[/[ \t\r\n]+/],[/<\/script\s*>/,{token:"@rematch",next:"@pop"}]],scriptEmbedded:[[/\{/,{token:"@rematch",switchTo:"@svelteInEmbeddedState.scriptEmbedded.$S2",nextEmbedded:"@pop"}],[/<\/script/,{token:"@rematch",next:"@pop",nextEmbedded:"@pop"}]],style:[[/\{/,{token:"@rematch",switchTo:"@svelteInSimpleState.style"}],[/type/,"attribute.name","@styleAfterType"],[/"([^"]*)"/,"attribute.value"],[/'([^']*)'/,"attribute.value"],[/[\w\-]+/,"attribute.name"],[/=/,"delimiter"],[/>/,{token:"delimiter.html",next:"@styleEmbedded.text/css",nextEmbedded:"text/css"}],[/[ \t\r\n]+/],[/(<\/)(style\s*)(>)/,["delimiter.html","tag.html",{token:"delimiter.html",next:"@pop"}]]],styleAfterType:[[/\{/,{token:"@rematch",switchTo:"@svelteInSimpleState.styleAfterType"}],[/=/,"delimiter","@styleAfterTypeEquals"],[/>/,{token:"delimiter.html",next:"@styleEmbedded.text/css",nextEmbedded:"text/css"}],[/[ \t\r\n]+/],[/<\/style\s*>/,{token:"@rematch",next:"@pop"}]],styleAfterTypeEquals:[[/\{/,{token:"@rematch",switchTo:"@svelteInSimpleState.styleAfterTypeEquals"}],[/"([^"]*)"/,{token:"attribute.value",switchTo:"@styleWithCustomType.$1"}],[/'([^']*)'/,{token:"attribute.value",switchTo:"@styleWithCustomType.$1"}],[/>/,{token:"delimiter.html",next:"@styleEmbedded.text/css",nextEmbedded:"text/css"}],[/[ \t\r\n]+/],[/<\/style\s*>/,{token:"@rematch",next:"@pop"}]],styleWithCustomType:[[/\{/,{token:"@rematch",switchTo:"@svelteInSimpleState.styleWithCustomType.$S2"}],[/>/,{token:"delimiter.html",next:"@styleEmbedded.$S2",nextEmbedded:"$S2"}],[/"([^"]*)"/,"attribute.value"],[/'([^']*)'/,"attribute.value"],[/[\w\-]+/,"attribute.name"],[/=/,"delimiter"],[/[ \t\r\n]+/],[/<\/style\s*>/,{token:"@rematch",next:"@pop"}]],styleEmbedded:[[/\{/,{token:"@rematch",switchTo:"@svelteInEmbeddedState.styleEmbedded.$S2",nextEmbedded:"@pop"}],[/<\/style/,{token:"@rematch",next:"@pop",nextEmbedded:"@pop"}]],svelteInSimpleState:[[/\{\{?/,"delimiter.svelte"],[/\}\}?/,{token:"delimiter.svelte",switchTo:"@$S2.$S3"}],{include:"svelteRoot"}],svelteInEmbeddedState:[[/\{\{?/,"delimiter.svelte"],[/\}\}?/,{token:"delimiter.svelte",switchTo:"@$S2.$S3",nextEmbedded:"$S3"}],{include:"svelteRoot"}],svelteRoot:[[/[#\/][^\s}]+/,"keyword.helper.svelte"],[/else\b/,"keyword.helper.svelte"],[/[\s]+/],[/[^}]/,"variable.parameter.svelte"]]}}},527:function(e,t,n){"use strict";n.r(t);var a=n(123),r=(n(185),n(23));Object(r.a)({id:"svelte",extensions:[".svelte",".sve"],aliases:["Svelte","svelte"],mimetypes:["text/x-svelte-template"],loader:function(){return Promise.resolve().then(n.bind(null,522))}});var i=n(522);a.languages.typescript.javascriptDefaults.setEagerModelSync(!0),a.languages.typescript.javascriptDefaults.setDiagnosticsOptions({noSemanticValidation:!0,noSyntaxValidation:!0}),a.languages.typescript.javascriptDefaults.setCompilerOptions({allowJs:!0,esModuleInterop:!0,target:a.languages.typescript.ScriptTarget.ESNext,moduleResolution:a.languages.typescript.ModuleResolutionKind.NodeJs,importHelpers:!0,module:a.languages.typescript.ModuleKind.ESNext,inlineSourceMap:!0}),a.languages.register({id:"svelte",extensions:[".svelte",".html"]}),a.languages.setMonarchTokensProvider("svelte",{conf:i.conf}),a.languages.setLanguageConfiguration("svelte",{language:i.language}),a.languages.typescript.typescriptDefaults.addExtraLib("\n  declare module '*.svelte' {\n    type Props = Record<string, any>;\n\n    export default class {\n      constructor(options: {\n        target: Element;\n        anchor?: Element;\n        props?: Props;\n        hydrate?: boolean;\n        intro?: boolean;\n      });\n\n      $set(props: Props): void;\n      $on<T = any>(event: string, callback: (event: CustomEvent<T>) => void): () => void;\n      $destroy(): void;\n\n      [accessor: string]: any;\n    }\n  }\n  ","svelte/ambient.d.ts"),a.languages.typescript.typescriptDefaults.addExtraLib("/** Callback to inform of a value updates. */\n  declare type Subscriber<T> = (value: T) => void;\n  /** Unsubscribes from value updates. */\n  declare type Unsubscriber = () => void;\n  /** Callback to update a value. */\n  declare type Updater<T> = (value: T) => T;\n  /** Cleanup logic callback. */\n  declare type Invalidator<T> = (value?: T) => void;\n  /** Start and stop notification callbacks. */\n  declare type StartStopNotifier<T> = (set: Subscriber<T>) => Unsubscriber | void;\n  /** Readable interface for subscribing. */\n  export interface Readable<T> {\n      /**\n       * Subscribe on value changes.\n       * @param run subscription callback\n       * @param invalidate cleanup callback\n       */\n      subscribe(run: Subscriber<T>, invalidate?: Invalidator<T>): Unsubscriber;\n  }\n  /** Writable interface for both updating and subscribing. */\n  export interface Writable<T> extends Readable<T> {\n      /**\n       * Set value and inform subscribers.\n       * @param value to set\n       */\n      set(value: T): void;\n      /**\n       * Update value using callback and inform subscribers.\n       * @param updater callback\n       */\n      update(updater: Updater<T>): void;\n  }\n  /**\n   * Creates a 'Readable' store that allows reading by subscription.\n   * @param value initial value\n   * @param {StartStopNotifier}start start and stop notifications for subscriptions\n   */\n  export declare function readable<T>(value: T, start: StartStopNotifier<T>): Readable<T>;\n  /**\n   * Create a 'Writable' store that allows both updating and reading by subscription.\n   * @param {*=}value initial value\n   * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n   */\n  export declare function writable<T>(value: T, start?: StartStopNotifier<T>): Writable<T>;\n  /** One or more 'Readable's. */\n  declare type Stores = Readable<any> | [Readable<any>, ...Array<Readable<any>>];\n  /** One or more values from 'Readable' stores. */\n  declare type StoresValues<T> = T extends Readable<infer U> ? U : {\n      [K in keyof T]: T[K] extends Readable<infer U> ? U : never;\n  };\n  /**\n   * Derived value store by synchronizing one or more readable stores and\n   * applying an aggregation function over its input values.\n   * @param {Stores} stores input stores\n   * @param {function(Stores=, function(*)=):*}fn function callback that aggregates the values\n   * @param {*=}initial_value when used asynchronously\n   */\n  export declare function derived<T, S extends Stores>(stores: S, fn: (values: StoresValues<S>, set?: Subscriber<T>) => T | Unsubscriber | void, initial_value?: T): Readable<T>;\n  /**\n   * Get the current value from a store by subscribing and immediately unsubscribing.\n   * @param store readable\n   */\n  export declare function get<T>(store: Readable<T>): T;\n  export {};","svelte/store/index.d.ts"),a.languages.typescript.typescriptDefaults.addExtraLib("\n  export interface TransitionConfig {\n    delay?: number;\n    duration?: number;\n    easing?: (t: number) => number;\n    css?: (t: number, u: number) => string;\n    tick?: (t: number, u: number) => void;\n}\ninterface FadeParams {\n    delay: number;\n    duration: number;\n}\nexport declare function fade(node: Element, { delay, duration }: FadeParams): TransitionConfig;\ninterface FlyParams {\n    delay: number;\n    duration: number;\n    easing: (t: number) => number;\n    x: number;\n    y: number;\n    opacity: number;\n}\nexport declare function fly(node: Element, { delay, duration, easing, x, y, opacity }: FlyParams): TransitionConfig;\ninterface SlideParams {\n    delay: number;\n    duration: number;\n    easing: (t: number) => number;\n}\nexport declare function slide(node: Element, { delay, duration, easing }: SlideParams): TransitionConfig;\ninterface ScaleParams {\n    delay: number;\n    duration: number;\n    easing: (t: number) => number;\n    start: number;\n    opacity: number;\n}\nexport declare function scale(node: Element, { delay, duration, easing, start, opacity }: ScaleParams): TransitionConfig;\ninterface DrawParams {\n    delay: number;\n    speed: number;\n    duration: number | ((len: number) => number);\n    easing: (t: number) => number;\n}\nexport declare function draw(node: SVGElement & {\n    getTotalLength(): number;\n}, { delay, speed, duration, easing }: DrawParams): TransitionConfig;\ninterface CrossfadeParams {\n    delay: number;\n    duration: number | ((len: number) => number);\n    easing: (t: number) => number;\n}\nexport declare function crossfade({ fallback, ...defaults }: CrossfadeParams & {\n    fallback: (node: Element, params: CrossfadeParams, intro: boolean) => TransitionConfig;\n}): ((node: Element, params: CrossfadeParams & {\n    key: any;\n}) => () => TransitionConfig)[];\nexport {};","svelte/transition/index.d.ts");t.default=a}}]);