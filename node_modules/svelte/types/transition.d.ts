import { cubicOut, cubicInOut } from 'svelte/easing';
export declare function fade(node: any, { delay, duration }: {
    delay?: number;
    duration?: number;
}): {
    delay: number;
    duration: number;
    css: (t: any) => string;
};
export declare function fly(node: any, { delay, duration, easing, x, y, opacity }: {
    delay?: number;
    duration?: number;
    easing?: typeof cubicOut;
    x?: number;
    y?: number;
    opacity?: number;
}): {
    delay: number;
    duration: number;
    easing: typeof cubicOut;
    css: (t: any, u: any) => string;
};
export declare function slide(node: any, { delay, duration, easing }: {
    delay?: number;
    duration?: number;
    easing?: typeof cubicOut;
}): {
    delay: number;
    duration: number;
    easing: typeof cubicOut;
    css: (t: any) => string;
};
export declare function scale(node: any, { delay, duration, easing, start, opacity }: {
    delay?: number;
    duration?: number;
    easing?: typeof cubicOut;
    start?: number;
    opacity?: number;
}): {
    delay: number;
    duration: number;
    easing: typeof cubicOut;
    css: (t: any, u: any) => string;
};
export declare function draw(node: any, { delay, speed, duration, easing }: {
    delay?: number;
    speed: any;
    duration: any;
    easing?: typeof cubicInOut;
}): {
    delay: number;
    duration: any;
    easing: typeof cubicInOut;
    css: (t: any, u: any) => string;
};
export declare function crossfade({ fallback, ...defaults }: {
    [x: string]: any;
    fallback: any;
}): ((node: any, params: any) => () => any)[];
